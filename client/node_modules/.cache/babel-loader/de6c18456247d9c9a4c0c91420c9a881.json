{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../components/firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('lol');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (e) {\n    yield put(fetchCollectionsFailure(e.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* userSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["C:/Users/Sarthak/Documents/react-course/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","e","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,0CAA3D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAN;;AAEA,MAAI;AACA,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMf,IAAI,CAACI,+BAAD,EAAkCS,QAAlC,CAAjC;AACA,UAAMZ,GAAG,CAACI,uBAAuB,CAACU,cAAD,CAAxB,CAAT;AACH,GALD,CAKE,OAAMC,CAAN,EAAS;AACP,UAAMf,GAAG,CAACK,uBAAuB,CAACU,CAAC,CAACC,OAAH,CAAxB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMnB,UAAU,CACZQ,eAAe,CAACY,uBADJ,EAEZX,qBAFY,CAAhB;AAIH;AAED,OAAO,UAAUY,SAAV,GAAuB;AAC1B,QAAMlB,GAAG,CAAC,CACNF,IAAI,CAACkB,qBAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects'\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../components/firebase/firebase.utils'\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions'\r\nimport ShopActionTypes from './shop.types'\r\n\r\nexport function* fetchCollectionsAsync() {\r\n    yield console.log('lol')\r\n\r\n    try {\r\n        const collectionRef = firestore.collection('collections')\r\n        const snapshot = yield collectionRef.get()\r\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\r\n        yield put(fetchCollectionsSuccess(collectionsMap))\r\n    } catch(e) {\r\n        yield put(fetchCollectionsFailure(e.message))\r\n    }\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeLatest(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionsAsync\r\n    )\r\n}\r\n\r\nexport function* userSagas () {\r\n    yield all([\r\n        call(fetchCollectionsStart)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}