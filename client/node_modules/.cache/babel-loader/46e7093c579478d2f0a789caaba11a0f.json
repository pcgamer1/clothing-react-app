{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../components/firebase/firebase.utils';\nexport const fetchCollectionsStart = () => {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n  };\n};\nexport const fetchCollectionsSuccess = collectionsMap => {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n  };\n};\nexport const fetchCollectionsFailure = errorMessage => {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n  };\n};\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(e => dispatch(fetchCollectionsFailure(e.message)));\n  };\n};","map":{"version":3,"sources":["C:/Users/Sarthak/Documents/react-course/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","e","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,0CAA3D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,MAAM;AACvC,SAAO;AACHC,IAAAA,IAAI,EAAEJ,eAAe,CAACK;AADnB,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,IAAoB;AACvD,SAAO;AACHH,IAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADnB;AAEHC,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,IAAkB;AACrD,SAAO;AACHP,IAAAA,IAAI,EAAEJ,eAAe,CAACY,yBADnB;AAEHH,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMZ,cAAc,GAAGL,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACH,KAHD,EAGGa,KAHH,CAGSC,CAAC,IAAIP,QAAQ,CAACJ,uBAAuB,CAACW,CAAC,CAACC,OAAH,CAAxB,CAHtB;AAIH,GARD;AASH,CAVM","sourcesContent":["import ShopActionTypes from './shop.types'\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../components/firebase/firebase.utils'\r\n\r\nexport const fetchCollectionsStart = () => {\r\n    return {\r\n        type: ShopActionTypes.FETCH_COLLECTIONS_START,\r\n    }\r\n}\r\n\r\nexport const fetchCollectionsSuccess = (collectionsMap) => {\r\n    return {\r\n        type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n        payload: collectionsMap\r\n    }\r\n}\r\n\r\nexport const fetchCollectionsFailure = (errorMessage) => {\r\n    return {\r\n        type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n        payload: errorMessage\r\n    }\r\n}\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n    return dispatch => {\r\n        const collectionRef = firestore.collection('collections')\r\n        dispatch(fetchCollectionsStart())\r\n\r\n        collectionRef.get().then(snapshot => {\r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\r\n            dispatch(fetchCollectionsSuccess(collectionsMap))\r\n        }).catch(e => dispatch(fetchCollectionsFailure(e.message)))\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}