{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { SignInSuccess, SignInFailure, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from './user.actions';\nimport UserActionTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDocument, getCurrentUser } from '../../components/firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (e) {\n    yield put(SignInFailure(e));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (e) {\n    yield put(SignInFailure(e));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (e) {\n    yield put(SignInFailure(e));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (e) {\n    yield put(SignInFailure(e));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (e) {\n    yield put(signOutFailure(e));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user, displayName);\n    const userSnapshot = userRef.get();\n    yield put(signUpSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (e) {\n    yield put(signUpFailure());\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["C:/Users/Sarthak/Documents/react-course/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","SignInSuccess","SignInFailure","signOutFailure","signOutSuccess","signUpFailure","signUpSuccess","UserActionTypes","googleProvider","auth","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","e","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\r\nimport { SignInSuccess, SignInFailure, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from './user.actions'\r\nimport UserActionTypes from './user.types'\r\nimport { googleProvider, auth, createUserProfileDocument, getCurrentUser } from '../../components/firebase/firebase.utils'\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument, userAuth)\r\n        const userSnapshot = yield userRef.get()\r\n        yield put(SignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\r\n    } catch(e) {\r\n        yield put(SignInFailure(e))\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle () {\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider)\r\n        yield getSnapshotFromUserAuth(user)\r\n    } catch(e) {\r\n        yield put(SignInFailure(e))\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail ({ payload: { email, password } }) {\r\n    try {   \r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password)\r\n        yield getSnapshotFromUserAuth(user)\r\n    } catch(e) {\r\n        yield put(SignInFailure(e))\r\n    }\r\n}\r\n\r\nexport function* isUserAuthenticated () {\r\n    try {\r\n        const userAuth = yield getCurrentUser()\r\n        if(!userAuth) return \r\n        yield getSnapshotFromUserAuth(userAuth)\r\n    } catch(e) {\r\n        yield put(SignInFailure(e))\r\n    }\r\n}\r\n\r\nexport function* signOut () {\r\n    try {\r\n        yield auth.signOut()\r\n        yield put(signOutSuccess())\r\n    } catch(e) {\r\n        yield put(signOutFailure(e))\r\n    }\r\n}\r\n\r\nexport function* signUp ({ payload: { email, password, displayName } }) {\r\n    try {\r\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password)\r\n        const userRef = yield call(createUserProfileDocument, user, displayName)\r\n        const userSnapshot = userRef.get()\r\n        yield put(signUpSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\r\n    } catch(e) {\r\n        yield put(signUpFailure())\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart () {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* onEmailSignInStart () {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\nexport function* onCheckUserSession () {\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\nexport function* onSignOutStart () {\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\r\n}\r\n\r\nexport function* onSignUpStart () {\r\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\r\n}\r\n\r\nexport function* onSignUpSuccess () {\r\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInWithEmail)\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart),\r\n        call(onCheckUserSession),\r\n        call(onSignOutStart),\r\n        call(onSignUpStart)\r\n    ])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}